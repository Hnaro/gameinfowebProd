{"ast":null,"code":"import _asyncToGenerator from \"E:/ProgrammingFiles/projects/gameinfoweb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/web-backend.service\";\nimport * as i3 from \"@angular/common\";\nfunction GameViewComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const genrename_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", genrename_r3.name, \"\\n\");\n  }\n}\nfunction GameViewComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const platformname_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", platformname_r4.name, \"\\n\");\n  }\n}\nfunction GameViewComponent_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"a\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const website_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"href\", website_r5.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", website_r5.url, \" \");\n  }\n}\nexport let GameViewComponent = /*#__PURE__*/(() => {\n  class GameViewComponent {\n    constructor(route, clientAPI) {\n      this.route = route;\n      this.clientAPI = clientAPI;\n      this.genreIDs = [];\n      this.coverUrl = \"\";\n      this.platformNames = [];\n      this.websites = [];\n      this.genreNames = [];\n    }\n    setUpGameViewData() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // request more info here\n        // get gameinfo\n        yield _this.clientAPI.getsingleGameInfo(_this.id).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (body) {\n            let bodysubs = yield body.subscribe( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator(function* (body) {\n                let results = Object.values(body);\n                //console.log(results[0]);\n                _this.genreIDs = results[0].genres;\n                _this.name = results[0].name;\n                _this.description = results[0].summary;\n                // get genre names\n                yield _this.clientAPI.getGenreNames(_this.genreIDs).then( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator(function* (data) {\n                    let subs = data.subscribe( /*#__PURE__*/function () {\n                      var _ref4 = _asyncToGenerator(function* (value) {\n                        _this.genreNames = Object.values(value);\n                        //console.log(this.genreNames.length);\n                        if (_this.genreNames) {\n                          subs.unsubscribe();\n                        }\n                      });\n                      return function (_x4) {\n                        return _ref4.apply(this, arguments);\n                      };\n                    }());\n                  });\n                  return function (_x3) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n                //get cover \n                yield _this.clientAPI.getGameCover(_this.id).then( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator(function* (data) {\n                    let subs = yield data.subscribe(value => {\n                      let cover;\n                      cover = Object.values(value)[0];\n                      _this.coverUrl = cover.url;\n                      if (cover) {\n                        subs.unsubscribe();\n                      }\n                    });\n                  });\n                  return function (_x5) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }());\n                // get platforms name\n                yield _this.clientAPI.getPlatformNames(results[0].platforms).then( /*#__PURE__*/function () {\n                  var _ref6 = _asyncToGenerator(function* (data) {\n                    let subs = yield data.subscribe( /*#__PURE__*/function () {\n                      var _ref7 = _asyncToGenerator(function* (value) {\n                        _this.platformNames = yield Object.values(value);\n                        if (_this.platformNames) {\n                          subs.unsubscribe();\n                        }\n                      });\n                      return function (_x7) {\n                        return _ref7.apply(this, arguments);\n                      };\n                    }());\n                  });\n                  return function (_x6) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }());\n                // get website names\n                yield _this.clientAPI.getsingleGameWebsites(_this.id).then( /*#__PURE__*/function () {\n                  var _ref8 = _asyncToGenerator(function* (data) {\n                    let subs = yield data.subscribe( /*#__PURE__*/function () {\n                      var _ref9 = _asyncToGenerator(function* (value) {\n                        _this.websites = yield Object.values(value);\n                        if (_this.websites) {\n                          subs.unsubscribe();\n                        }\n                      });\n                      return function (_x9) {\n                        return _ref9.apply(this, arguments);\n                      };\n                    }());\n                  });\n                  return function (_x8) {\n                    return _ref8.apply(this, arguments);\n                  };\n                }());\n                if (results) {\n                  bodysubs.unsubscribe();\n                }\n              });\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n    ngOnInit() {\n      var _this2 = this;\n      let subs = this.route.queryParamMap.subscribe(value => {\n        this.id = value.get(\"id\");\n        if (this.id) {\n          subs.unsubscribe();\n        }\n      });\n      setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this2.setUpGameViewData();\n      }), 500);\n    }\n  }\n  GameViewComponent.ɵfac = function GameViewComponent_Factory(t) {\n    return new (t || GameViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.WebBackendService));\n  };\n  GameViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameViewComponent,\n    selectors: [[\"app-game-view\"]],\n    decls: 17,\n    vars: 6,\n    consts: [[\"loading\", \"lazy\", \"alt\", \"\", \"srcset\", \"\", 3, \"src\"], [4, \"ngFor\", \"ngForOf\"], [3, \"href\"]],\n    template: function GameViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelement(3, \"img\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"h5\");\n        i0.ɵɵtext(5, \"Summary: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"h5\");\n        i0.ɵɵtext(9, \"Genres:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, GameViewComponent_p_10_Template, 2, 1, \"p\", 1);\n        i0.ɵɵelementStart(11, \"h5\");\n        i0.ɵɵtext(12, \"Platforms:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, GameViewComponent_p_13_Template, 2, 1, \"p\", 1);\n        i0.ɵɵelementStart(14, \"h5\");\n        i0.ɵɵtext(15, \"Websites:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, GameViewComponent_p_16_Template, 3, 2, \"p\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"src\", ctx.coverUrl, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.description);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.genreNames);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.platformNames);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.websites);\n      }\n    },\n    dependencies: [i3.NgForOf]\n  });\n  return GameViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}