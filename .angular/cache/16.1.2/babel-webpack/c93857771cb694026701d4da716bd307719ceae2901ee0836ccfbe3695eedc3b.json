{"ast":null,"code":"import _asyncToGenerator from \"E:/ProgrammingFiles/projects/gameinfoweb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/web-backend.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/gameview\", a1];\n};\nconst _c1 = function (a0) {\n  return {\n    id: a0\n  };\n};\nexport let GameBoxComponent = /*#__PURE__*/(() => {\n  class GameBoxComponent {\n    constructor(clientAPI) {\n      this.clientAPI = clientAPI;\n      this.name = \"\";\n      this.coverID = 0;\n      // if no cover use this instead\n      this.defaultImage = \"../../../assets/nodataImage.png\";\n      this.homestatus = new EventEmitter();\n      this.genreIDs = [];\n      this.testImage = \"\";\n    }\n    checkCoverUrl(url) {\n      if (url) {\n        return \"https:\" + url;\n      } else {\n        return this.defaultImage;\n      }\n    }\n    setupData() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        let results;\n        yield _this.clientAPI.getGameCover(_this.gameID).then(data => {\n          let subs = data.subscribe(value => {\n            _this.cover = Object.values(value)[0];\n            _this.coverUrl = _this.cover?.url;\n            if (_this.cover) {\n              subs.unsubscribe();\n            }\n          });\n        });\n      })();\n    }\n    ngOnInit() {\n      setTimeout(() => {\n        this.setupData();\n      }, 1000);\n    }\n    updateHomeStatus() {\n      this.homestatus.emit(false);\n    }\n  }\n  GameBoxComponent.ɵfac = function GameBoxComponent_Factory(t) {\n    return new (t || GameBoxComponent)(i0.ɵɵdirectiveInject(i1.WebBackendService));\n  };\n  GameBoxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameBoxComponent,\n    selectors: [[\"app-game-box\"]],\n    inputs: {\n      gameID: \"gameID\",\n      name: \"name\",\n      coverID: \"coverID\"\n    },\n    outputs: {\n      homestatus: \"homestatus\"\n    },\n    decls: 5,\n    vars: 8,\n    consts: [[\"id\", \"gamebox-divcontainer\"], [\"id\", \"game-box-frame\", 3, \"routerLink\", \"queryParams\", \"click\"], [\"loading\", \"\", \"alt\", \"games\", 3, \"src\"]],\n    template: function GameBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵlistener(\"click\", function GameBoxComponent_Template_div_click_1_listener() {\n          return ctx.updateHomeStatus();\n        });\n        i0.ɵɵelementStart(2, \"h3\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"img\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, ctx.gameID))(\"queryParams\", i0.ɵɵpureFunction1(6, _c1, ctx.gameID));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.name, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.checkCoverUrl(ctx.coverUrl), i0.ɵɵsanitizeUrl);\n      }\n    },\n    dependencies: [i2.RouterLink],\n    styles: [\"#gamebox-divcontainer[_ngcontent-%COMP%]{width:40%;padding:0;margin:1em;display:inline-block;font-size:.8em}#gamebox-divcontainer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{image-rendering:pixelated;width:100%}#game-box-frame[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{box-shadow:.1em .1em .2em .1em #7e7e7e}#gamebox-divcontainer[_ngcontent-%COMP%]{padding-top:.5em;padding-bottom:.5em}h3[_ngcontent-%COMP%]{padding:.7em;height:3em;background-color:#e76f51;font-weight:700;color:#fff;text-align:center;font-size:.8em;background-position:0em}div[_ngcontent-%COMP%]:hover{cursor:pointer}@media screen and (min-width: 600px){#gamebox-divcontainer[_ngcontent-%COMP%]{width:20%}}@media screen and (min-width: 900px){#gamebox-divcontainer[_ngcontent-%COMP%]{width:15%;font-size:1.2em}}@media screen and (min-width: 1300px){#gamebox-divcontainer[_ngcontent-%COMP%]{width:10%}}\"]\n  });\n  return GameBoxComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}