{"ast":null,"code":"import _asyncToGenerator from \"/Users/hnaroserrano/vsProjects/gameinfowebsite-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/web-backend.service\";\nimport * as i2 from \"src/app/services/search.service\";\nimport * as i3 from \"@angular/common\";\nfunction SelectionComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 4);\n    i0.ɵɵlistener(\"click\", function SelectionComponent_div_4_div_1_Template_input_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const genre_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.selectID(genre_r2.id));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const genre_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", genre_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(genre_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", genre_r2.name);\n  }\n}\nfunction SelectionComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SelectionComponent_div_4_div_1_Template, 4, 3, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.genres);\n  }\n}\nexport class SelectionComponent {\n  constructor(clientAPI, searchService) {\n    this.clientAPI = clientAPI;\n    this.searchService = searchService;\n    this.selectedIDS = new EventEmitter();\n    this.isSelectionActive = false;\n    this.selectedids = [];\n    this.genres = [];\n    //searchService.setSearchedGenres = [{id: 1, name:\"test1\"},{id: 2, name:\"test2\"}]\n  }\n\n  ngOnInit() {\n    this.setUpGenreIDs();\n  }\n  setUpGenreIDs() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // client\n      _this.clientAPI.getAllGenreNames().then(data => {\n        let subs = data.subscribe(value => {\n          _this.genres = Object.values(value);\n          if (_this.genres) {\n            subs.unsubscribe();\n          }\n        });\n      });\n      //console.log(this.searchService.getSearchedGenres);\n    })();\n  }\n  // gets the selected ids and throw it back to search bar\n  // each button for selecting ids will have this\n  selectID(ids) {\n    //  store selectedIds\n    this.selectedids.push(ids);\n  }\n  filterSearch() {\n    //console.log(this.selectedids)\n    this.selectedIDS.emit(this.selectedids);\n  }\n  showSelections() {\n    if (this.isSelectionActive) {\n      // emit data here\n      console.log(this.selectedids);\n      this.isSelectionActive = false;\n      return;\n    }\n    this.isSelectionActive = true;\n  }\n}\nSelectionComponent.ɵfac = function SelectionComponent_Factory(t) {\n  return new (t || SelectionComponent)(i0.ɵɵdirectiveInject(i1.WebBackendService), i0.ɵɵdirectiveInject(i2.SearchService));\n};\nSelectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectionComponent,\n  selectors: [[\"app-selection\"]],\n  outputs: {\n    selectedIDS: \"selectedIDS\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"for\"], [\"type\", \"checkbox\", \"id\", \"\", 3, \"name\", \"click\"]],\n  template: function SelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function SelectionComponent_Template_button_click_0_listener() {\n        return ctx.showSelections();\n      });\n      i0.ɵɵtext(1, \"Genres\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function SelectionComponent_Template_button_click_2_listener() {\n        return ctx.filterSearch();\n      });\n      i0.ɵɵtext(3, \"Filter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, SelectionComponent_div_4_Template, 2, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSelectionActive);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SelectionComponent_div_4_div_1_Template_input_click_3_listener","restoredCtx","ɵɵrestoreView","_r4","genre_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","selectID","id","ɵɵadvance","ɵɵpropertyInterpolate","name","ɵɵtextInterpolate","ɵɵtemplate","SelectionComponent_div_4_div_1_Template","ɵɵproperty","ctx_r0","genres","SelectionComponent","constructor","clientAPI","searchService","selectedIDS","isSelectionActive","selectedids","ngOnInit","setUpGenreIDs","_this","_asyncToGenerator","getAllGenreNames","then","data","subs","subscribe","value","Object","values","unsubscribe","ids","push","filterSearch","emit","showSelections","console","log","ɵɵdirectiveInject","i1","WebBackendService","i2","SearchService","selectors","outputs","decls","vars","consts","template","SelectionComponent_Template","rf","ctx","SelectionComponent_Template_button_click_0_listener","SelectionComponent_Template_button_click_2_listener","SelectionComponent_div_4_Template"],"sources":["/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/components/selection/selection.component.ts","/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/components/selection/selection.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { SearchService } from 'src/app/services/search.service';\nimport { WebBackendService } from 'src/app/services/web-backend.service';\n\n@Component({\n  selector: 'app-selection',\n  templateUrl: './selection.component.html',\n  styleUrls: ['./selection.component.css']\n})\nexport class SelectionComponent implements OnInit {\n  @Output() selectedIDS = new EventEmitter;\n\n  isSelectionActive: boolean = false; \n  \n  selectedids: number[] = [];\n  genres: any[];\n  constructor(private clientAPI: WebBackendService, private searchService: SearchService) {\n    this.genres = [];\n    //searchService.setSearchedGenres = [{id: 1, name:\"test1\"},{id: 2, name:\"test2\"}]\n  }\n  ngOnInit(): void {\n    this.setUpGenreIDs();\n  }\n  async setUpGenreIDs() {\n    // client\n    this.clientAPI.getAllGenreNames().then(data => {\n      let subs = data.subscribe(value => {\n        this.genres = Object.values(value);\n        if (this.genres) {\n          subs.unsubscribe();\n        }\n      })\n    })\n    //console.log(this.searchService.getSearchedGenres);\n  }\n  // gets the selected ids and throw it back to search bar\n  // each button for selecting ids will have this\n  selectID(ids: number){\n    //  store selectedIds\n    this.selectedids.push(ids);\n  }\n  filterSearch() {\n    //console.log(this.selectedids)\n    this.selectedIDS.emit(this.selectedids);\n  }\n  showSelections() {\n    if (this.isSelectionActive) {\n      // emit data here\n      console.log(this.selectedids);\n      this.isSelectionActive = false;\n      return;\n    }\n    this.isSelectionActive = true;\n  }\n}\n","<button (click)=\"showSelections()\">Genres<!-- put svg image here --></button>\n<button (click)=\"filterSearch()\">Filter</button>\n<div  *ngIf=\"isSelectionActive\">\n    <div *ngFor=\" let genre of genres\">\n        <label for={{genre.name}}>{{genre.name}}</label>\n        <input (click)=\"selectID(genre.id)\" type=\"checkbox\" name={{genre.name}} id=\"\">\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}