{"ast":null,"code":"import _asyncToGenerator from \"/Users/hnaroserrano/vsProjects/gameinfowebsite-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/web-backend.service\";\nimport * as i2 from \"src/app/services/search.service\";\nimport * as i3 from \"@angular/common\";\nfunction SelectionComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 2);\n    i0.ɵɵtext(2, \"Wii\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SelectionComponent {\n  constructor(clientAPI, searchService) {\n    this.clientAPI = clientAPI;\n    this.searchService = searchService;\n    this.selectedIDS = new EventEmitter();\n    this.isSelectionActive = false;\n    this.selectedids = [];\n    console.log(\"hello\");\n    //searchService.setSearchedGenres = [{id: 1, name:\"test1\"},{id: 2, name:\"test2\"}]\n  }\n\n  ngOnInit() {\n    this.setUpGenreIDs();\n  }\n  setUpGenreIDs() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // client\n      _this.clientAPI.getAllGenreNames().then(data => {\n        let subs = data.subscribe(value => {\n          _this.searchService.setSearchedGenres = value;\n        });\n      });\n      //console.log(this.searchService.getSearchedGenres);\n    })();\n  }\n  // gets the selected ids and throw it back to search bar\n  // each button for selecting ids will have this\n  selectID(ids) {\n    //  store selectedIds\n    this.selectedids.push(ids);\n  }\n  showSelections() {\n    if (this.isSelectionActive) {\n      // emit data here\n      this.selectedIDS.emit(this.selectedids);\n      this.isSelectionActive = false;\n      return;\n    }\n    this.isSelectionActive = true;\n  }\n}\nSelectionComponent.ɵfac = function SelectionComponent_Factory(t) {\n  return new (t || SelectionComponent)(i0.ɵɵdirectiveInject(i1.WebBackendService), i0.ɵɵdirectiveInject(i2.SearchService));\n};\nSelectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectionComponent,\n  selectors: [[\"app-selection\"]],\n  outputs: {\n    selectedIDS: \"selectedIDS\"\n  },\n  decls: 3,\n  vars: 1,\n  consts: [[3, \"click\"], [4, \"ngIf\"], [\"for\", \"wii\"], [\"type\", \"checkbox\", \"name\", \"wii\", \"id\", \"\", \"value\", \"Wii\"]],\n  template: function SelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function SelectionComponent_Template_button_click_0_listener() {\n        return ctx.showSelections();\n      });\n      i0.ɵɵtext(1, \"Genres\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, SelectionComponent_div_2_Template, 4, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSelectionActive);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","SelectionComponent","constructor","clientAPI","searchService","selectedIDS","isSelectionActive","selectedids","console","log","ngOnInit","setUpGenreIDs","_this","_asyncToGenerator","getAllGenreNames","then","data","subs","subscribe","value","setSearchedGenres","selectID","ids","push","showSelections","emit","ɵɵdirectiveInject","i1","WebBackendService","i2","SearchService","selectors","outputs","decls","vars","consts","template","SelectionComponent_Template","rf","ctx","ɵɵlistener","SelectionComponent_Template_button_click_0_listener","ɵɵtemplate","SelectionComponent_div_2_Template","ɵɵadvance","ɵɵproperty"],"sources":["/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/components/selection/selection.component.ts","/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/components/selection/selection.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { SearchService } from 'src/app/services/search.service';\nimport { WebBackendService } from 'src/app/services/web-backend.service';\n\n@Component({\n  selector: 'app-selection',\n  templateUrl: './selection.component.html',\n  styleUrls: ['./selection.component.css']\n})\nexport class SelectionComponent implements OnInit {\n  @Output() selectedIDS = new EventEmitter;\n\n  isSelectionActive: boolean = false; \n  \n  selectedids: number[];\n  genres: any[];\n  constructor(private clientAPI: WebBackendService, private searchService: SearchService) {\n    this.selectedids = [];\n    console.log(\"hello\")\n    //searchService.setSearchedGenres = [{id: 1, name:\"test1\"},{id: 2, name:\"test2\"}]\n  }\n  ngOnInit(): void {\n    this.setUpGenreIDs();\n  }\n  async setUpGenreIDs() {\n    // client\n    this.clientAPI.getAllGenreNames().then(data => {\n      let subs = data.subscribe(value => {\n        this.searchService.setSearchedGenres = value;\n      })\n    })\n    //console.log(this.searchService.getSearchedGenres);\n  }\n  // gets the selected ids and throw it back to search bar\n  // each button for selecting ids will have this\n  selectID(ids: number){\n    //  store selectedIds\n    this.selectedids.push(ids);\n  }\n  showSelections() {\n    if (this.isSelectionActive) {\n      // emit data here\n      this.selectedIDS.emit(this.selectedids)\n      this.isSelectionActive = false;\n      return;\n    }\n    this.isSelectionActive = true;\n  }\n}\n","<button (click)=\"showSelections()\">Genres<!-- put svg image here --></button>\n<div *ngIf=\"isSelectionActive\">\n    <label for=\"wii\">Wii</label>\n    <input type=\"checkbox\" name=\"wii\" id=\"\" value=\"Wii\">\n</div>"],"mappings":";AAAA,SAAoBA,YAAY,QAAwB,eAAe;;;;;;;ICCvEC,EAAA,CAAAC,cAAA,UAA+B;IACVD,EAAA,CAAAE,MAAA,UAAG;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC5BH,EAAA,CAAAI,SAAA,eAAoD;IACxDJ,EAAA,CAAAG,YAAA,EAAM;;;ADKN,OAAM,MAAOE,kBAAkB;EAO7BC,YAAoBC,SAA4B,EAAUC,aAA4B;IAAlE,KAAAD,SAAS,GAATA,SAAS;IAA6B,KAAAC,aAAa,GAAbA,aAAa;IAN7D,KAAAC,WAAW,GAAG,IAAIV,YAAY,CAAZ,CAAY;IAExC,KAAAW,iBAAiB,GAAY,KAAK;IAKhC,IAAI,CAACC,WAAW,GAAG,EAAE;IACrBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB;EACF;;EACAC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EACMA,aAAaA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACjB;MACAD,KAAI,CAACT,SAAS,CAACW,gBAAgB,EAAE,CAACC,IAAI,CAACC,IAAI,IAAG;QAC5C,IAAIC,IAAI,GAAGD,IAAI,CAACE,SAAS,CAACC,KAAK,IAAG;UAChCP,KAAI,CAACR,aAAa,CAACgB,iBAAiB,GAAGD,KAAK;QAC9C,CAAC,CAAC;MACJ,CAAC,CAAC;MACF;IAAA;EACF;EACA;EACA;EACAE,QAAQA,CAACC,GAAW;IAClB;IACA,IAAI,CAACf,WAAW,CAACgB,IAAI,CAACD,GAAG,CAAC;EAC5B;EACAE,cAAcA,CAAA;IACZ,IAAI,IAAI,CAAClB,iBAAiB,EAAE;MAC1B;MACA,IAAI,CAACD,WAAW,CAACoB,IAAI,CAAC,IAAI,CAAClB,WAAW,CAAC;MACvC,IAAI,CAACD,iBAAiB,GAAG,KAAK;MAC9B;;IAEF,IAAI,CAACA,iBAAiB,GAAG,IAAI;EAC/B;;AAtCWL,kBAAkB,C;mBAAlBA,kBAAkB,EAAAL,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAhC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;AAAlB7B,kBAAkB,C;QAAlBA,kBAAkB;EAAA8B,SAAA;EAAAC,OAAA;IAAA3B,WAAA;EAAA;EAAA4B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/B1C,EAAA,CAAAC,cAAA,gBAAmC;MAA3BD,EAAA,CAAA4C,UAAA,mBAAAC,oDAAA;QAAA,OAASF,GAAA,CAAAf,cAAA,EAAgB;MAAA,EAAC;MAAC5B,EAAA,CAAAE,MAAA,aAAM;MAA2BF,EAAA,CAAAG,YAAA,EAAS;MAC7EH,EAAA,CAAA8C,UAAA,IAAAC,iCAAA,iBAGM;;;MAHA/C,EAAA,CAAAgD,SAAA,GAAuB;MAAvBhD,EAAA,CAAAiD,UAAA,SAAAN,GAAA,CAAAjC,iBAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}