{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/web-backend.service\";\nimport * as i2 from \"src/app/services/search.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction SearchBarComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", null, 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"error-style\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errMsg);\n  }\n}\nexport let SearchBarComponent = /*#__PURE__*/(() => {\n  class SearchBarComponent {\n    constructor(clientAPI, searchService) {\n      this.clientAPI = clientAPI;\n      this.searchService = searchService;\n      this.sendsearchName = new EventEmitter();\n      this.noInput = false;\n      this.name = \"\";\n      this.errMsg = \"Please enter a name...\";\n      //searchService.setName = [1,4,8,16];\n    }\n\n    ngOnInit() {}\n    onClick() {\n      if (this.name) {\n        this.sendsearchName.emit(this.name);\n        this.noInput = false;\n      } else {\n        this.noInput = true;\n      }\n      // click send data that should trigger the search game\n    }\n  }\n\n  SearchBarComponent.ɵfac = function SearchBarComponent_Factory(t) {\n    return new (t || SearchBarComponent)(i0.ɵɵdirectiveInject(i1.WebBackendService), i0.ɵɵdirectiveInject(i2.SearchService));\n  };\n  SearchBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchBarComponent,\n    selectors: [[\"app-search-bar\"]],\n    outputs: {\n      sendsearchName: \"sendsearchName\"\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[\"id\", \"searchBar-divContainer\"], [\"id\", \"searchBynameSection-divContainer\"], [\"type\", \"text\", \"placeholder\", \"Search a name...\", 3, \"ngModel\", \"ngModelChange\"], [3, \"error-style\", 4, \"ngIf\"], [3, \"click\"], [\"err\", \"\"]],\n    template: function SearchBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function SearchBarComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, SearchBarComponent_div_4_Template, 3, 3, \"div\", 3);\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function SearchBarComponent_Template_button_click_5_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵtext(6, \"Search\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.noInput && !ctx.name);\n      }\n    },\n    dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\".error-style[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return SearchBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}