{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/web-backend.service\";\nimport * as i3 from \"@angular/common\";\nfunction GameViewComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const genrename_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(genrename_r3.name);\n  }\n}\nfunction GameViewComponent_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const platformname_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(platformname_r4.name);\n  }\n}\nfunction GameViewComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const website_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(website_r5.url);\n  }\n}\nexport class GameViewComponent {\n  constructor(route, clientAPI) {\n    this.route = route;\n    this.clientAPI = clientAPI;\n    this.genreIDs = [];\n    this.coverUrl = \"\";\n    this.platformNames = [];\n    this.websites = [];\n    this.genreNames = [];\n  }\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(value => {\n      this.id = value.get(\"id\");\n    });\n    // request more info here\n    // get gameinfo\n    this.clientAPI.getsingleGameInfo(this.id).then(body => {\n      body.subscribe(body => {\n        let results = Object.values(body);\n        console.log(results[0]);\n        this.genreIDs = results[0].genres;\n        this.name = results[0].name;\n        // get genre names\n        this.clientAPI.getGenreNames(this.genreIDs).then(data => {\n          data.subscribe(value => {\n            this.genreNames = Object.values(value);\n            //console.log(this.genreNames.length);\n          });\n        });\n        //get cover \n        this.clientAPI.getGameCover(this.id).then(data => {\n          data.subscribe(value => {\n            this.coverUrl = Object.values(value)[0].url;\n          });\n        });\n        // get platforms name\n        this.clientAPI.getPlatformNames(results[0].platforms).then(data => {\n          data.subscribe(value => {\n            this.platformNames = Object.values(value);\n          });\n        });\n        // get website names\n        this.clientAPI.getsingleGameWebsites(this.id).then(data => {\n          data.subscribe(value => {\n            this.websites = Object.values(value);\n            console.log(this.websites);\n          });\n        });\n      });\n    });\n  }\n}\nGameViewComponent.ɵfac = function GameViewComponent_Factory(t) {\n  return new (t || GameViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.WebBackendService));\n};\nGameViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameViewComponent,\n  selectors: [[\"app-game-view\"]],\n  decls: 15,\n  vars: 6,\n  consts: [[\"alt\", \"\", \"srcset\", \"\", 3, \"src\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function GameViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵelement(5, \"img\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"h5\");\n      i0.ɵɵtext(7, \"Genres:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, GameViewComponent_p_8_Template, 2, 1, \"p\", 1);\n      i0.ɵɵelementStart(9, \"h5\");\n      i0.ɵɵtext(10, \"Platforms:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, GameViewComponent_p_11_Template, 2, 1, \"p\", 1);\n      i0.ɵɵelementStart(12, \"h5\");\n      i0.ɵɵtext(13, \"Websites:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, GameViewComponent_p_14_Template, 2, 1, \"p\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"src\", ctx.coverUrl, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genreNames);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.platformNames);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.websites);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","genrename_r3","name","platformname_r4","website_r5","url","GameViewComponent","constructor","route","clientAPI","genreIDs","coverUrl","platformNames","websites","genreNames","ngOnInit","queryParamMap","subscribe","value","id","get","getsingleGameInfo","then","body","results","Object","values","console","log","genres","getGenreNames","data","getGameCover","getPlatformNames","platforms","getsingleGameWebsites","ɵɵdirectiveInject","i1","ActivatedRoute","i2","WebBackendService","selectors","decls","vars","consts","template","GameViewComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","GameViewComponent_p_8_Template","GameViewComponent_p_11_Template","GameViewComponent_p_14_Template","ɵɵproperty","ɵɵsanitizeUrl"],"sources":["/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/pages/game-view/game-view.component.ts","/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/pages/game-view/game-view.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WebBackendService } from 'src/app/services/web-backend.service';\n\n@Component({\n  selector: 'app-game-view',\n  templateUrl: './game-view.component.html',\n  styleUrls: ['./game-view.component.css']\n})\nexport class GameViewComponent implements OnInit {\n  id: any;\n  genreIDs: number[] = [];\n  name: any;\n  coverUrl: string = \"\";\n  platformNames: any[] = [];\n  websites: any[] = [];\n\n  genreNames: any[] = [];\n  constructor(private route: ActivatedRoute,private clientAPI: WebBackendService){}\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe(value => {\n      this.id = value.get(\"id\");\n    });\n    // request more info here\n    // get gameinfo\n    this.clientAPI.getsingleGameInfo(this.id)\n    .then(body => {\n      body.subscribe(body => {\n        let results = Object.values(body);\n        console.log(results[0]);\n        this.genreIDs = results[0].genres;\n        this.name = results[0].name;\n        // get genre names\n        this.clientAPI.getGenreNames(this.genreIDs)\n        .then(data => {\n          data.subscribe(value => {\n            this.genreNames = Object.values(value);\n            //console.log(this.genreNames.length);\n          })\n        })\n        //get cover \n        this.clientAPI.getGameCover(this.id)\n        .then(data => {\n          data.subscribe(value => {\n            this.coverUrl = Object.values(value)[0].url;\n          })\n        })\n        // get platforms name\n        this.clientAPI.getPlatformNames(results[0].platforms)\n        .then(data => {\n          data.subscribe(value => {\n            this.platformNames = Object.values(value);\n          })\n        })\n        // get website names\n        this.clientAPI.getsingleGameWebsites(this.id)\n        .then(data => {\n          data.subscribe(value => {\n            this.websites = Object.values(value);\n            console.log(this.websites);\n          })\n        })\n      })\n    })\n  }\n}\n","<p>{{id}}</p>\n<h1>{{ name }}</h1>\n<div><img [src]=\"coverUrl\" alt=\"\" srcset=\"\"></div>\n<h5>Genres:</h5>\n<p *ngFor=\" let genrename of genreNames\">{{genrename.name}}</p>\n<h5>Platforms:</h5>\n<p *ngFor=\" let platformname of platformNames\">{{platformname.name}}</p>\n<h5>Websites:</h5>\n<p *ngFor=\" let website of websites\">{{website.url}}</p>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}