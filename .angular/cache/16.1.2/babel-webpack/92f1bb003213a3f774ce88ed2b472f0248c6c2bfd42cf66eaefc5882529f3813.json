{"ast":null,"code":"import _asyncToGenerator from \"/Users/hnaroserrano/vsProjects/gameinfowebsite-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/web-backend.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/search.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../components/game-box/game-box.component\";\nimport * as i6 from \"../../components/search-bar/search-bar.component\";\nimport * as i7 from \"../../components/selection/selection.component\";\nfunction IndexComponent_app_game_box_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-game-box\", 3);\n  }\n  if (rf & 2) {\n    const games_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"gameID\", games_r1.id)(\"name\", games_r1.name)(\"coverID\", games_r1.cover);\n  }\n}\nexport class IndexComponent {\n  constructor(clientAPI, route, searchService) {\n    this.clientAPI = clientAPI;\n    this.route = route;\n    this.searchService = searchService;\n    //genreSearchResults: any[];\n    // list of genreIDs for searching\n    this.genreSelectedIDs = [];\n    this.gamesSearchResults = [];\n    //searchService.setSearchedGenres = [{id: 1, name:\"test1\"},{id: 2, name:\"test2\"}]\n  }\n\n  ngOnInit() {\n    this.setUpData();\n  }\n  setUpData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n        let gameresults;\n        _this.nameSearched = \"Martian\";\n        yield _this.clientAPI.getData().then(value => {\n          let subscribedData = value.subscribe(value => {\n            _this.gamesSearchResults = Object.values(value);\n            // unsubscribed to data when collected\n            if (_this.gamesSearchResults) {\n              subscribedData.unsubscribe();\n            }\n          });\n        });\n      }), 500);\n    })();\n  }\n  handleSelectedIDs(e) {\n    return _asyncToGenerator(function* () {\n      console.log(e);\n    })();\n  }\n  handleSearchByGenre(e) {\n    return _asyncToGenerator(function* () {})();\n  } //await this.clientAPI.\n\n  handleGameSearch(e) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.clientAPI.searchByName(e).then(data => {\n        let subs = data.subscribe(value => {\n          _this2.gamesSearchResults = Object.values(value);\n          if (_this2.gamesSearchResults) {\n            subs.unsubscribe();\n          }\n        });\n      });\n    })();\n  }\n}\nIndexComponent.ɵfac = function IndexComponent_Factory(t) {\n  return new (t || IndexComponent)(i0.ɵɵdirectiveInject(i1.WebBackendService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.SearchService));\n};\nIndexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IndexComponent,\n  selectors: [[\"app-index\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[3, \"selectedIDS\"], [3, \"sendsearchName\"], [3, \"gameID\", \"name\", \"coverID\", 4, \"ngFor\", \"ngForOf\"], [3, \"gameID\", \"name\", \"coverID\"]],\n  template: function IndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Games\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-selection\", 0);\n      i0.ɵɵlistener(\"selectedIDS\", function IndexComponent_Template_app_selection_selectedIDS_2_listener($event) {\n        return ctx.handleSelectedIDs($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"app-search-bar\", 1);\n      i0.ɵɵlistener(\"sendsearchName\", function IndexComponent_Template_app_search_bar_sendsearchName_3_listener($event) {\n        return ctx.handleGameSearch($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵtemplate(5, IndexComponent_app_game_box_5_Template, 1, 3, \"app-game-box\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.gamesSearchResults);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.GameBoxComponent, i6.SearchBarComponent, i7.SelectionComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","games_r1","id","name","cover","IndexComponent","constructor","clientAPI","route","searchService","genreSelectedIDs","gamesSearchResults","ngOnInit","setUpData","_this","_asyncToGenerator","setTimeout","gameresults","nameSearched","getData","then","value","subscribedData","subscribe","Object","values","unsubscribe","handleSelectedIDs","e","console","log","handleSearchByGenre","handleGameSearch","_this2","searchByName","data","subs","ɵɵdirectiveInject","i1","WebBackendService","i2","ActivatedRoute","i3","SearchService","selectors","decls","vars","consts","template","IndexComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","IndexComponent_Template_app_selection_selectedIDS_2_listener","$event","IndexComponent_Template_app_search_bar_sendsearchName_3_listener","ɵɵtemplate","IndexComponent_app_game_box_5_Template","ɵɵadvance"],"sources":["/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/pages/index/index.component.ts","/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/pages/index/index.component.html"],"sourcesContent":["import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { WebBackendService } from '../../services/web-backend.service';\nimport { SearchService } from 'src/app/services/search.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n  gamesSearchResults: any;\n  nameSearched: any;\n  //genreSearchResults: any[];\n  // list of genreIDs for searching\n  genreSelectedIDs: any[] = [];\n  constructor(private clientAPI: WebBackendService, \n    private route: ActivatedRoute, private searchService: SearchService) {\n    this.gamesSearchResults = [];\n    //searchService.setSearchedGenres = [{id: 1, name:\"test1\"},{id: 2, name:\"test2\"}]\n  }\n  ngOnInit(): void {\n    this.setUpData();\n  }\n  async setUpData() {\n    setTimeout(async () => {\n      let gameresults: any;\n      this.nameSearched = \"Martian\";\n      await this.clientAPI.getData().then(value => {\n        let subscribedData = value.subscribe(value => {\n          this.gamesSearchResults = Object.values(value);\n          // unsubscribed to data when collected\n          if (this.gamesSearchResults) {\n            subscribedData.unsubscribe();\n          }\n        })\n      })\n    }, 500);\n  }\n  async handleSelectedIDs(e: any) {\n    console.log(e)\n  }\n  async handleSearchByGenre(e: any) {\n    //await this.clientAPI.\n  }\n  async handleGameSearch(e: any) {\n    await this.clientAPI.searchByName(e)\n    .then(data => {\n      let subs = data.subscribe(value => {\n        this.gamesSearchResults = Object.values(value);\n        if(this.gamesSearchResults) {\n          subs.unsubscribe();\n        }\n      })\n    })\n  }\n}\n","<h1>Games</h1>\n<app-selection (selectedIDS)=\"handleSelectedIDs($event)\"></app-selection>\n<app-search-bar (sendsearchName)=\"handleGameSearch($event)\"  ></app-search-bar>\n<div>\n  <app-game-box *ngFor=\" let games of gamesSearchResults\"\n  [gameID]=\"games.id\"\n  [name]=\"games.name\"\n  [coverID]=\"games.cover\"></app-game-box>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}