{"ast":null,"code":"import _asyncToGenerator from \"E:/ProgrammingFiles/projects/gameinfoweb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment as env } from '../../.environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WebBackendService {\n  constructor(http) {\n    this.http = http;\n    // change this for new url if deployed\n    this.defaultURL = \"http://10.0.0.145:7096/api\";\n    this.defaultGetDataUrl = \"http://10.0.0.145:7096/\";\n    this.deployedDefaultURL = env.deployedBackendURL + \"api\";\n    this.deployedGetDataUrl = env.deployedBackendURL;\n  }\n  getData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get(_this.deployedGetDataUrl);\n    })();\n  }\n  getAllGenreNames() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this2.http.get(_this2.deployedDefaultURL + \"/allGenres\");\n    })();\n  }\n  searchByName(name) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this3.http.post(_this3.deployedDefaultURL + \"/nameSearch\", {\n        name: name\n      });\n    })();\n  }\n  searchByGenre(genreId) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this4.http.post(_this4.deployedDefaultURL + \"/genre\", {\n        genreId: genreId\n      });\n    })();\n  }\n  searchByGenres(genreIds) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this5.http.post(_this5.deployedDefaultURL + \"/genresSearch\", {\n        genreids: genreIds\n      });\n    })();\n  }\n  getGameCover(gameID) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this6.http.post(_this6.deployedDefaultURL + \"/gameCovers\", {\n        gameid: gameID\n      });\n    })();\n  }\n  getGenreNames(genreIDs) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this7.http.post(_this7.deployedDefaultURL + \"/genreNames\", {\n        genreids: genreIDs\n      });\n    })();\n  }\n  getPlatformNames(platformIDs) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this8.http.post(_this8.deployedDefaultURL + \"/platformNames\", {\n        platformids: platformIDs\n      });\n    })();\n  }\n  // get single game info\n  getsingleGameInfo(gameID) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this9.http.post(_this9.deployedDefaultURL + \"/gameSearch\", {\n        gameid: gameID\n      });\n    })();\n  }\n  //get single game website\n  getsingleGameWebsites(gameID) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this10.http.post(_this10.deployedDefaultURL + \"/gamesitesSearch\", {\n        gameid: gameID\n      });\n    })();\n  }\n}\nWebBackendService.ɵfac = function WebBackendService_Factory(t) {\n  return new (t || WebBackendService)(i0.ɵɵinject(i1.HttpClient));\n};\nWebBackendService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebBackendService,\n  factory: WebBackendService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","env","WebBackendService","constructor","http","defaultURL","defaultGetDataUrl","deployedDefaultURL","deployedBackendURL","deployedGetDataUrl","getData","_this","_asyncToGenerator","get","getAllGenreNames","_this2","searchByName","name","_this3","post","searchByGenre","genreId","_this4","searchByGenres","genreIds","_this5","genreids","getGameCover","gameID","_this6","gameid","getGenreNames","genreIDs","_this7","getPlatformNames","platformIDs","_this8","platformids","getsingleGameInfo","_this9","getsingleGameWebsites","_this10","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\ProgrammingFiles\\projects\\gameinfoweb\\src\\app\\services\\web-backend.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment as env } from '../../.environment/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebBackendService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  // change this for new url if deployed\r\n  defaultURL = \"http://10.0.0.145:7096/api\";\r\n  defaultGetDataUrl = \"http://10.0.0.145:7096/\"\r\n\r\n  deployedDefaultURL = env.deployedBackendURL+\"api\";\r\n  deployedGetDataUrl = env.deployedBackendURL;\r\n  async getData() {\r\n    return await this.http.get(this.deployedGetDataUrl);\r\n  }\r\n  async getAllGenreNames() {\r\n    return await this.http.get(this.deployedDefaultURL+\"/allGenres\");\r\n  }\r\n  async searchByName(name: string) {\r\n    return await this.http.post(this.deployedDefaultURL+\"/nameSearch\", { name: name},);\r\n  }\r\n  async searchByGenre(genreId: number) {\r\n    return await this.http.post(this.deployedDefaultURL+\"/genre\", { genreId: genreId });\r\n  }\r\n  async searchByGenres(genreIds: number) {\r\n    return await this.http.post(this.deployedDefaultURL+\"/genresSearch\", { genreids: genreIds });\r\n  }\r\n  async getGameCover(gameID: number) {\r\n    return await this.http.post(this.deployedDefaultURL+\"/gameCovers\", { gameid: gameID });\r\n  }\r\n  async getGenreNames(genreIDs: number[]){\r\n    return await this.http.post(this.deployedDefaultURL+\"/genreNames\", { genreids: genreIDs });\r\n  }\r\n  async getPlatformNames(platformIDs: number[]) {\r\n    return await this.http.post(this.deployedDefaultURL+\"/platformNames\", {platformids: platformIDs});\r\n  }\r\n  // get single game info\r\n  async getsingleGameInfo(gameID: number) {\r\n    return await this.http.post(this.deployedDefaultURL+\"/gameSearch\", {gameid: gameID})\r\n  }\r\n  //get single game website\r\n  async getsingleGameWebsites(gameID: number) {\r\n    return await this.http.post(this.deployedDefaultURL+\"/gamesitesSearch\", {gameid:gameID})\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}