{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/web-backend.service\";\nimport * as i2 from \"src/app/services/search.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/game-box/game-box.component\";\nimport * as i5 from \"../../components/search-bar/search-bar.component\";\nfunction IndexComponent_app_game_box_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-game-box\", 2);\n  }\n  if (rf & 2) {\n    const games_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"gameID\", games_r1.id)(\"name\", games_r1.name)(\"coverID\", games_r1.cover);\n  }\n}\nexport class IndexComponent {\n  constructor(clientAPI, searchService) {\n    this.clientAPI = clientAPI;\n    this.searchService = searchService;\n    this.nameSearched = \"\";\n    this.gamesSearchResults = [];\n  }\n  handleSearchedName(e) {\n    console.log(e);\n    this.nameSearched = e;\n  }\n  ngOnChanges(changes) {\n    if (changes['nameSearched'].previousValue) {\n      console.log(\"new changes\");\n    }\n  }\n  ngOnInit() {\n    let gameresults;\n    console.log(this.searchService.searchedName);\n    this.nameSearched = this.searchService.getName;\n    setTimeout(() => {\n      if (this.nameSearched) {\n        this.clientAPI.searchByName(this.nameSearched).then(data => {\n          data.subscribe(value => {\n            this.gamesSearchResults = Object.values(value);\n          });\n        });\n      } else {\n        this.clientAPI.getData().then(value => {\n          value.subscribe(value => {\n            this.gamesSearchResults = Object.values(value);\n            console.log(this.gamesSearchResults);\n          });\n        });\n      }\n    }, 500);\n  }\n}\nIndexComponent.ɵfac = function IndexComponent_Factory(t) {\n  return new (t || IndexComponent)(i0.ɵɵdirectiveInject(i1.WebBackendService), i0.ɵɵdirectiveInject(i2.SearchService));\n};\nIndexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IndexComponent,\n  selectors: [[\"app-index\"]],\n  inputs: {\n    nameSearched: \"nameSearched\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 1,\n  consts: [[3, \"sendsearchName\"], [3, \"gameID\", \"name\", \"coverID\", 4, \"ngFor\", \"ngForOf\"], [3, \"gameID\", \"name\", \"coverID\"]],\n  template: function IndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Games\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-search-bar\", 0);\n      i0.ɵɵlistener(\"sendsearchName\", function IndexComponent_Template_app_search_bar_sendsearchName_2_listener($event) {\n        return ctx.handleSearchedName($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\");\n      i0.ɵɵtemplate(4, IndexComponent_app_game_box_4_Template, 1, 3, \"app-game-box\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.gamesSearchResults);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.GameBoxComponent, i5.SearchBarComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","games_r1","id","name","cover","IndexComponent","constructor","clientAPI","searchService","nameSearched","gamesSearchResults","handleSearchedName","e","console","log","ngOnChanges","changes","previousValue","ngOnInit","gameresults","searchedName","getName","setTimeout","searchByName","then","data","subscribe","value","Object","values","getData","ɵɵdirectiveInject","i1","WebBackendService","i2","SearchService","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","IndexComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","IndexComponent_Template_app_search_bar_sendsearchName_2_listener","$event","ɵɵtemplate","IndexComponent_app_game_box_4_Template","ɵɵadvance"],"sources":["/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/pages/index/index.component.ts","/Users/hnaroserrano/vsProjects/gameinfowebsite-project/src/app/pages/index/index.component.html"],"sourcesContent":["import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { WebBackendService } from '../../services/web-backend.service';\nimport { SearchService } from 'src/app/services/search.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit, OnChanges {\n  gamesSearchResults: any;\n  @Input() nameSearched: string = \"\";\n  constructor(private clientAPI: WebBackendService, \n    private searchService: SearchService) {\n    this.gamesSearchResults = [];\n  }\n  handleSearchedName(e: any) {\n    console.log(e);\n    this.nameSearched = e;\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes['nameSearched'].previousValue) {\n      console.log(\"new changes\");\n    }\n  }\n  ngOnInit(): void {\n    let gameresults: any;\n    console.log(this.searchService.searchedName);\n    this.nameSearched = this.searchService.getName;\n    setTimeout(() => {\n      if (this.nameSearched) {\n        this.clientAPI.searchByName(this.nameSearched)\n        .then(data => {\n          data.subscribe(value => {\n            this.gamesSearchResults = Object.values(value);\n          })\n        })\n      } else {\n        this.clientAPI.getData().then(value => {\n          value.subscribe(value => {\n            this.gamesSearchResults = Object.values(value);\n            console.log(this.gamesSearchResults)\n          })\n        })\n      }\n    }, 500);\n  }\n}\n","<h1>Games</h1>\n<app-search-bar (sendsearchName)=\"handleSearchedName($event)\"></app-search-bar>\n<div>\n  <app-game-box *ngFor=\" let games of gamesSearchResults\"\n  [gameID]=\"games.id\"\n  [name]=\"games.name\"\n  [coverID]=\"games.cover\"></app-game-box>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}