{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WebBackendService {\n  constructor(http) {\n    this.http = http;\n    this.myArray = [];\n  }\n  getData() {\n    return this.http.get(\"http://10.0.0.43:7096/\");\n  }\n  searchName(name) {\n    return this.http.post(\"http://10.0.0.43:7096/api/nameSearch\", {\n      name: name\n    });\n  }\n  searchGenre(genreId) {\n    return this.http.post(\"http://10.0.0.43:7096/api/genre\", {\n      genreId: genreId\n    });\n  }\n  getGameCover(coverID) {\n    return this.http.post(\"http://10.0.0.43:7096/api/gameCovers\", {\n      coverid: coverID\n    });\n  }\n}\nWebBackendService.ɵfac = function WebBackendService_Factory(t) {\n  return new (t || WebBackendService)(i0.ɵɵinject(i1.HttpClient));\n};\nWebBackendService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebBackendService,\n  factory: WebBackendService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["WebBackendService","constructor","http","myArray","getData","get","searchName","name","post","searchGenre","genreId","getGameCover","coverID","coverid","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\ProgrammingFiles\\projects\\gameinfoweb\\src\\app\\services\\web-backend.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebBackendService {\n  myArray: Array<any>;\n  constructor(private http: HttpClient) {\n    this.myArray = [];\n  }\n  getData() {\n    return this.http.get(\"http://10.0.0.43:7096/\");\n  }\n  searchName(name: string) {\n    return this.http.post(\"http://10.0.0.43:7096/api/nameSearch\", { name: name},);\n  }\n  searchGenre(genreId: number) {\n    return this.http.post(\"http://10.0.0.43:7096/api/genre\", { genreId: genreId });\n  }\n  getGameCover(coverID: number) {\n    return this.http.post(\"http://10.0.0.43:7096/api/gameCovers\", { coverid: coverID })\n  }\n  getGenreNames()\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,OAAO,GAAG,EAAE;EACnB;EACAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,wBAAwB,CAAC;EAChD;EACAC,UAAUA,CAACC,IAAY;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,sCAAsC,EAAE;MAAED,IAAI,EAAEA;IAAI,CAAC,CAAE;EAC/E;EACAE,WAAWA,CAACC,OAAe;IACzB,OAAO,IAAI,CAACR,IAAI,CAACM,IAAI,CAAC,iCAAiC,EAAE;MAAEE,OAAO,EAAEA;IAAO,CAAE,CAAC;EAChF;EACAC,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACV,IAAI,CAACM,IAAI,CAAC,sCAAsC,EAAE;MAAEK,OAAO,EAAED;IAAO,CAAE,CAAC;EACrF;;AAhBWZ,iBAAiB,C;mBAAjBA,iBAAiB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAjBjB,iBAAiB,C;SAAjBA,iBAAiB;EAAAkB,OAAA,EAAjBlB,iBAAiB,CAAAmB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}